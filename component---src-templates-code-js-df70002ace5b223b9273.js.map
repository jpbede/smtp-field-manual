{"version":3,"sources":["webpack:///./src/templates/code.js","webpack:///./src/components/responseList.js","webpack:///./src/components/responseJump.js"],"names":["data","pageContext","reply","description","providers","otherCodes","spamFilters","providersSorted","orderBy","o","name","toLowerCase","spamFiltersSorted","codesSorted","providersAndFiltersSorted","title","className","dangerouslySetInnerHTML","__html","list","identifierKey","labelKey","updateOnScroll","length","titleKey","titleLabelKey","titleSlugPrefix","map","code","key","to","slug","identifierPrefix","item","List","identifier","label","responses","response","Response","status","children","fullIdentifier","titleHref","titleSlug","id","href","identifer","helpers","identifierHref"],"mappings":"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","file":"component---src-templates-code-js-df70002ace5b223b9273.js","sourcesContent":["import React from 'react'\nimport { orderBy } from 'lodash'\nimport { Link } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport ResponseList from '../components/responseList'\nimport ResponseJump from '../components/responseJump'\nimport DividerGlitch from '../components/dividerGlitch'\n\nexport default ({ pageContext: { data } }) => {\n  const { reply, description, providers, otherCodes, spamFilters } = data\n  const providersSorted = orderBy(providers, [o => o.name.toLowerCase()])\n  const spamFiltersSorted = orderBy(spamFilters, [o => o.name.toLowerCase()])\n  const codesSorted = orderBy(otherCodes, [o => o.reply])\n  const providersAndFiltersSorted = orderBy(\n    [...providers, ...spamFilters],\n    [o => o.name.toLowerCase()]\n  )\n\n  return (\n    <Layout>\n      <SEO title={`${reply} SMTP code`} />\n      <div className='masthead'>\n        <div className='container'>\n          <h2 className='masthead_title'>SMTP Code {reply}</h2>\n          {description !== '' && (\n            <p\n              className='masthead_description'\n              dangerouslySetInnerHTML={{ __html: description }}\n            ></p>\n          )}\n\n          <ResponseJump\n            list={providersAndFiltersSorted}\n            identifierKey='id'\n            labelKey='name'\n          />\n        </div>\n      </div>\n\n      <DividerGlitch updateOnScroll={true} />\n\n      <div className='container u-push-top'>\n        {providersSorted.length > 0 && (\n          <>\n            <h3 className='response-list-header'>Email service providers</h3>\n            <ResponseList\n              list={providersSorted}\n              titleKey='id'\n              titleLabelKey='name'\n              titleSlugPrefix='/provider'\n            />\n          </>\n        )}\n\n        {spamFiltersSorted.length > 0 && (\n          <>\n            <h3 className='response-list-header u-push-top'>\n              Spam filters services\n            </h3>\n            <ResponseList\n              list={spamFiltersSorted}\n              titleKey='id'\n              titleLabelKey='name'\n              titleSlugPrefix='/spamfilter'\n            />\n          </>\n        )}\n\n        <h3 className='response-list-header u-push-top'>Other SMTP codes</h3>\n        <div className='sub-section'>\n          <ul className='columns-3 columns-diamond'>\n            {codesSorted.map(code => (\n              <li key={code.reply}>\n                <Link to={`/code${code.slug}`}>{code.reply}</Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport * as helpers from '../utils/helpers'\n\nexport default ({\n  list,\n  titleLabelKey,\n  titleKey,\n  titleSlugPrefix,\n  identifierPrefix = '',\n}) => {\n  return (\n    <>\n      {list.map(item => (\n        <List\n          key={item[titleKey]}\n          identifierPrefix={identifierPrefix}\n          identifier={item[titleKey]}\n          label={item[titleLabelKey]}\n          titleSlugPrefix={titleSlugPrefix}\n        >\n          {item.responses.map(response => (\n            <Response\n              key={response.status}\n              data={response}\n              code={item[titleKey]}\n              identifierPrefix={identifierPrefix}\n            />\n          ))}\n        </List>\n      ))}\n    </>\n  )\n}\n\nconst List = ({\n  children,\n  identifier,\n  identifierPrefix,\n  label,\n  titleSlugPrefix,\n}) => {\n  const fullIdentifier = `${identifierPrefix}${identifier}`\n  const titleHref = `#${fullIdentifier}`\n  const titleSlug = `${titleSlugPrefix}/${identifier}`\n\n  return (\n    <section className='response-list'>\n      <h3 className='response-list_name' id={fullIdentifier}>\n        {/* <a href={titleHref}>#</a> */}\n        <a href={titleHref} className='response-list_name-anchor'>\n          {label}\n        </a>\n        <Link to={titleSlug} className='response-list_name-link'>\n          All {label} codes &rarr;\n        </Link>\n      </h3>\n      <div className='response-list_items'>{children}</div>\n      <a href='#top' className='response-list_top'>\n        ↑ Back to top\n      </a>\n    </section>\n  )\n}\n\nconst Response = ({ data, code, identifierPrefix }) => {\n  const { status, response } = data\n  const identifer = helpers.codeAnchor({ identifierPrefix, code, status })\n  const identifierHref = `#${identifer}`\n\n  return (\n    <div id={identifer} className='response-list_item'>\n      <a href={identifierHref} className='response-list_item-anchor'>\n        <span>#</span>\n      </a>\n      <p className='response-label'>{response}</p>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default ({ list, identifierKey, identifierPrefix = '', labelKey }) => {\n  return (\n    <div className='jump'>\n      <h4>Jump to ↓</h4>\n\n      <ul className='columns-3'>\n        {list.map(item => (\n          <li key={item[identifierKey]}>\n            <a href={`#${identifierPrefix}${item[identifierKey]}`}>\n              {item[labelKey]}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n"],"sourceRoot":""}