{"version":3,"sources":["webpack:///./src/templates/spamFilter.js","webpack:///./src/components/responseList.js","webpack:///./src/components/responseJump.js"],"names":["data","pageContext","name","codes","otherProviders","codesSorted","orderBy","o","reply","otherProvidersSorted","toLowerCase","title","className","list","identifierKey","identifierPrefix","labelKey","updateOnScroll","titleKey","titleLabelKey","titleSlugPrefix","map","provider","key","id","to","slug","item","List","identifier","label","responses","response","Response","status","code","children","fullIdentifier","titleHref","titleSlug","href","identifer","helpers","identifierHref"],"mappings":"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","file":"component---src-templates-spam-filter-js-82e357d91a59e4b43753.js","sourcesContent":["import React from 'react'\nimport { orderBy } from 'lodash'\nimport { Link } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport ResponseList from '../components/responseList'\nimport ResponseJump from '../components/responseJump'\nimport DividerGlitch from '../components/dividerGlitch'\n\nexport default ({ pageContext: { data } }) => {\n  const { name, codes, otherProviders } = data\n  const codesSorted = orderBy(codes, [o => o.reply])\n  const otherProvidersSorted = orderBy(otherProviders, [\n    o => o.name.toLowerCase(),\n  ])\n\n  return (\n    <Layout>\n      <SEO title={`${name} codes`} />\n      <div className='masthead'>\n        <div className='container'>\n          <h2 className='masthead_title'>{name}</h2>\n\n          <ResponseJump\n            list={codesSorted}\n            identifierKey='reply'\n            identifierPrefix='code_'\n            labelKey='reply'\n          />\n        </div>\n      </div>\n      <DividerGlitch updateOnScroll={true} />\n\n      <div className='container u-push-top'>\n        <ResponseList\n          list={codesSorted}\n          titleKey='reply'\n          titleLabelKey='reply'\n          titleSlugPrefix='/code'\n          identifierPrefix='code_'\n        />\n\n        <h3 className='response-list-header'>Other spam filter services</h3>\n        <div className='sub-section'>\n          <ul className='columns-3 columns-diamond'>\n            {otherProvidersSorted.map(provider => (\n              <li key={provider.id}>\n                <Link to={`/spamfilter${provider.slug}`}>{provider.name}</Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport * as helpers from '../utils/helpers'\n\nexport default ({\n  list,\n  titleLabelKey,\n  titleKey,\n  titleSlugPrefix,\n  identifierPrefix = '',\n}) => {\n  return (\n    <>\n      {list.map(item => (\n        <List\n          key={item[titleKey]}\n          identifierPrefix={identifierPrefix}\n          identifier={item[titleKey]}\n          label={item[titleLabelKey]}\n          titleSlugPrefix={titleSlugPrefix}\n        >\n          {item.responses.map(response => (\n            <Response\n              key={response.status}\n              data={response}\n              code={item[titleKey]}\n              identifierPrefix={identifierPrefix}\n            />\n          ))}\n        </List>\n      ))}\n    </>\n  )\n}\n\nconst List = ({\n  children,\n  identifier,\n  identifierPrefix,\n  label,\n  titleSlugPrefix,\n}) => {\n  const fullIdentifier = `${identifierPrefix}${identifier}`\n  const titleHref = `#${fullIdentifier}`\n  const titleSlug = `${titleSlugPrefix}/${identifier}`\n\n  return (\n    <section className='response-list'>\n      <h3 className='response-list_name' id={fullIdentifier}>\n        {/* <a href={titleHref}>#</a> */}\n        <a href={titleHref} className='response-list_name-anchor'>\n          {label}\n        </a>\n        <Link to={titleSlug} className='response-list_name-link'>\n          All {label} codes &rarr;\n        </Link>\n      </h3>\n      <div className='response-list_items'>{children}</div>\n      <a href='#top' className='response-list_top'>\n        ↑ Back to top\n      </a>\n    </section>\n  )\n}\n\nconst Response = ({ data, code, identifierPrefix }) => {\n  const { status, response } = data\n  const identifer = helpers.codeAnchor({ identifierPrefix, code, status })\n  const identifierHref = `#${identifer}`\n\n  return (\n    <div id={identifer} className='response-list_item'>\n      <a href={identifierHref} className='response-list_item-anchor'>\n        <span>#</span>\n      </a>\n      <p className='response-label'>{response}</p>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default ({ list, identifierKey, identifierPrefix = '', labelKey }) => {\n  return (\n    <div className='jump'>\n      <h4>Jump to ↓</h4>\n\n      <ul className='columns-3'>\n        {list.map(item => (\n          <li key={item[identifierKey]}>\n            <a href={`#${identifierPrefix}${item[identifierKey]}`}>\n              {item[labelKey]}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n"],"sourceRoot":""}